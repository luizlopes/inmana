name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      db:
        # Docker Hub image
        image: postgres:11
        ports: ['5432:5432']
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.12' # Define the elixir version [required]
        otp-version: '24' # Define the OTP version [required]

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Setup database
      run: MIX_ENV=test mix ecto.setup
      env:
        DATABASE_HOSTNAME: localhost

    - name: Run tests and coverage
      run: MIX_ENV=test mix coveralls.github
      env:
        DATABASE_HOSTNAME: localhost
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
